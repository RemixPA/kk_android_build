#!/bin/bash
#
# Copyright (C) 2013 The MoKee OpenSource Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

INPUT_PATH=$1
OUTPUT_PATH=$2

get_timestamp(){
echo $1 | cut -d'-' -f4 | cut -d'.' -f1
}

get_latest(){
LATEST_DEVICE=`echo $LATEST_ZIP | cut -d'-' -f1 | cut -d'_' -f2`
LATEST_TIMESTAMP=`get_timestamp $LATEST_ZIP`
LATEST_VERSION=`echo $LATEST_ZIP | cut -d'-' -f2`-`echo $LATEST_ZIP | cut -d'-' -f3`
LATEST_YR=${LATEST_TIMESTAMP:0:4}
LATEST_MTH=${LATEST_TIMESTAMP:4:2}
LATEST_DATE=${LATEST_TIMESTAMP:6:2}
}

compare_file(){
CUR_ZIP=$1
CUR_TIMESTAMP=`get_timestamp $1`

if [ -z "$LATEST_ZIP" ];then
	LATEST_ZIP=$CUR_ZIP
	return 0
fi

get_latest

CUR_YR=${CUR_TIMESTAMP:0:4}
CUR_MTH=${CUR_TIMESTAMP:4:2}
CUR_DATE=${CUR_TIMESTAMP:6:2}
if [ $CUR_YR -gt $LATEST_YR ];then
	LATEST_ZIP=$CUR_ZIP
elif [ $CUR_YR -eq $LATEST_YR ];then
	if [ $CUR_MTH -gt $LATEST_MTH ];then
		LATEST_ZIP=$CUR_ZIP
	elif [ $CUR_MTH -eq $LATEST_MTH ];then
		if [ $CUR_DATE -gt $LATEST_DATE ];then
			LATEST_ZIP=$CUR_ZIP
		fi
	fi
fi
}

FILENAMES=`ls $INPUT_PATH`
for i in $FILENAMES;do
	if [ ! -d $INPUT_PATH/$i ] && [[ "$i" == *".zip" ]];then
		compare_file $i
	fi
done

get_latest
if [ ! -z "$LATEST_ZIP" ];then
	echo "Latest zip is $LATEST_ZIP"
	echo "Generating OTA packages..."
	echo "===================================="
else
	echo "Error! Check file names or input parameters!"
	exit 1
fi

mkdir -p $OUTPUT_PATH
for i in $FILENAMES;do
	CUR_TIMESTAMP=`get_timestamp $i`
	if [ "$i" != "$LATEST_ZIP" ] && [ ! -d $INPUT_PATH/$i ] && [[ "$i" == *".zip" ]];then
		echo "Generating OTA package for $i..."
		echo "------------------------------------"
		echo "Generating OTA package for $i..."
		build/tools/mk_ota_script/otabsdiff $INPUT_PATH/$i $INPUT_PATH/$LATEST_ZIP $OUTPUT_PATH/OTA-$LATEST_VERSION-$LATEST_DEVICE-$CUR_TIMESTAMP-$LATEST_TIMESTAMP.zip
		echo "Completed OTA package for $i at `date`"
		MD5=`md5sum $OUTPUT_PATH/OTA-$LATEST_VERSION-$LATEST_DEVICE-$CUR_TIMESTAMP-$LATEST_TIMESTAMP.zip | cut -f1 -d' '`
		echo "MD5sum : $MD5"
		echo "------------------------------------"
	else
	    echo "Skip package $i"
	    echo "------------------------------------"
	fi
done
echo "===================================="
echo "Completed at `date`"
